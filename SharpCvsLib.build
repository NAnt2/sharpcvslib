<!--
    Build file for the SharpCvsLib project:
        http://sharpcvslib.sourceforge.net
-->
<project name="${name.top-level}-${name.project}" default="build.all">
    <!-- Comment out net-1.0 framework and uncomment mono framework to run on mono 
    
    FIXME: Having security issues with the 1-1 framework, is this just
        my machine??!
    
    -->
    <property name="nant.settings.currentframework" value = "net-1.0"/>
    <!--<property name="nant.settings.currentframework" value = "mono-1.0-linux"/>  -->

    <!-- Names of the files generated -->
    <property name="name.top-level" value="ICSharpCode" />
    <property name="name.project" value="SharpCvsLib" />
    <property name="name.lib" value="${name.project}" />    
    <property name="name.console" value="Console" />
    <property name="name.console.exe" value="cvs" />
    <property name="name.tests" value="Tests" />
    
    <!-- Version information -->
    <property name="assembly.version" value="0.3.4.2" />  
    
    <!-- Compiler information/ settings -->
    <property name="compile.warnaserror" value="true" />
    <property name="compile.debug" value="true" />
    <property name="compile.unsafe" value="/unsafe-" />
    <property name="compile.checked" value="/checked-" />
    <property name="compile.define" value="DEBUG;TRACE" />
    
    <!-- Directory structure -->
    <property name="dir.base" value="${nant.project.basedir}" />
    <property name="dir.build" value="${dir.base}/build/bin" /> 
    <property name="dir.conf" value="${dir.base}/conf" />
    <property name="dir.dist" value="${dir.base}/dist" />
    <property name="dir.src" value="${dir.base}/src" />
    <property name="dir.lib" value="${dir.base}/lib" />
    <property name="dir.lib.ext" value="${dir.lib}/ext" />
    <property name="dir.sf-release.base" value="h:/dev/sf.net/sharpcvslib" />

    <!-- Referenced lib and lib/ext dll files -->
    <property name="lib.log4net" value="log4net.dll" />
    <property name="lib.nunit" value="nunit.framework.dll" />    
    <property name="lib.zip" value="ICSharpCode.SharpZipLib.dll" />

    <!-- Documentation variables -->
    <property name="copyright-text" value="Mike Krueger 2001-2002, SharpCvsLib Developers" />
    <property name="copyright-href" value="http://www.gnu.org/copyleft/lesser.html#TOC1" />

    <!-- Targets -->
    <target name="update.src" description="Updates the source from cvs.">
       <cvs-update  module="sharcvslib" 
                    cvsroot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/nant"
                    destination="${src.dir}"
                    password="" />
    </target>

    <target name="setup">
        <mkdir dir="${dir.build}" />
        <copy todir="${dir.build}">
            <fileset basedir="${dir.lib}">
                <includes name="${lib.zip}" />
            </fileset>
        </copy>        
        <copy todir="${dir.build}">
            <fileset basedir="${dir.lib.ext}">
                <includes name="${lib.log4net}" />
                <includes name="${lib.nunit}" />
            </fileset>
        </copy>
        <copy todir="${dir.build}">
            <fileset basedir="${dir.conf}">
                <includes name="*.config" />
            </fileset>
        </copy>
    </target>
    
    <target name="build.all">
        <call target="build.console" />
        <call target="build.lib" />
        <call target="build.test" />
    </target>

    <target name="build.lib" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}/${name.project}/${name.project}.build" target="build-${nant.settings.currentframework}"/>
    </target>

    <target name="build.console" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}.${name.console}/${name.console}.build" target="build-${nant.settings.currentframework}"/>
    </target>
    
    <target name="build.test" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}.${name.tests}/${name.project}/${name.tests}.build" target="build-${nant.settings.currentframework}"/>
    </target>

    <target name="netdoc" failonerror="true">
        <property name="Title" value="#Cvslib" />
        <property name="ShowMissingSummaries" value="True" />
        <property name="OutputDirectory" value="${dist.dir}/${assembly.version}/doc/api" />
        
        <property name="ShowMissingSummaries" value="True" />
        <property name="ShowMissingRemarks" value="False" />
        <property name="ShowMissingParams" value="True" />
        <property name="ShowMissingReturns" value="True" />
        <property name="ShowMissingValues" value="True" />

        <property name="DocumentInternals" value="False" />
        <property name="DocumentProtected" value="True" />
        <property name="DocumentPrivates" value="False" />
        <property name="DocumentEmptyNamespaces" value="False" />

        <property name="IncludeAssemblyVersion" value="False" />

        <echo message="${dir.build}" />
        <ndoc>
            <assemblies basedir="${dir.build}">
                <includes name="${lib.name}.dll"/>
            </assemblies>
            <documenters>
                <documenter name="MSDN">
                    <property name="Title" value="${Title}" />
                    <property name="OutputDirectory" value="${OutputDirectory}/MSDN" />

                    <property name="ShowMissingSummaries" value="${ShowMissingSummaries}" />
                    <property name="ShowMissingRemarks" value="${ShowMissingRemarks}" />
                    <property name="ShowMissingParams" value="${ShowMissingParams}" />
                    <property name="ShowMissingReturns" value="${ShowMissingReturns}" />
                    <property name="ShowMissingValues" value="${ShowMissingValues}" />

                    <property name="DocumentInternals" value="${DocumentInternals}" />
                    <property name="DocumentProtected" value="${DocumentProtected}" />
                    <property name="DocumentPrivates" value="${DocumentPrivates}" />
                    <property name="DocumentEmptyNamespaces" value="${DocumentEmptyNamespaces}" />

                    <property name="IncludeAssemblyVersion" value="${IncludeAssemblyVersion}" />
                    <property name="CopyrightText" value="${copyright-text}" />
                    <property name="CopyrightHref" value="${copyright-href}" />

                    <property name="HtmlHelpName" value="Sporadicism.Blogger" />
                    <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="True" />
                </documenter>
            </documenters> 
        </ndoc>
    </target>
    
    <target name="run-tests" depends="build.all">
            <nant buildfile="${dir.src}/${name.top-level}.${name.tests}/${name.project}/${name.tests}.build" target="run-tests-${nant.settings.currentframework}"/>
    </target>
    <target name="dist" depends="build.lib, build.test, build.console, run-tests">
        <property name="dist.src" value="${dist.dir}/${assembly.version}/src" />
        <property name="dist.bin" value="${dist.dir}/${assembly.version}/bin" />
        
        <mkdir dir="${dist.bin}" />
        <mkdir dir="${dist.src}" />    
        <call target="netdoc" />
        
        <copy todir="${dist.bin}/${lib.name}">
            <fileset basedir="${dir.build}">
                <includes name="**/**.dll"/>
                <includes name="**/**.config"/>
            </fileset>
        </copy>
        <zip zipfile="${dist.dir}/${assembly.version}/${lib.name}-${assembly.version}-bin.zip">
            <fileset basedir="${dist.bin}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
        
        <copy todir="${dist.src}/${lib.name}">
            <fileset basedir=".">
                <includes name="**/**.*" />
                <excludes name="*.suo" />
                <excludes name="*.csproj.user" />
                <excludes name="**/obj**" />
                <excludes name="**/dist**" />
                <excludes name="**/build**" />
            </fileset>
        </copy>
        
        <zip zipfile="${dist.dir}/${assembly.version}/${lib.name}-${assembly.version}-src.zip">
            <fileset basedir="${dist.src}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
    </target>
    
    <target name="sf-release">
        <property name="dir.export" value="${dir.sf-release.base}" />
        <property name="dir.version" value="${dir.version}/${assembly.version}" />
        <property name="dir.filesdir" value="${dir.version}/files" />
        
        <mkdir dir="${dir.version}" />
        <mkdir dir="${dir.files}" />
        
        <copy todir="${dir.files}">
            <fileset basedir=".">
                <includes name="**/**.*" />
                <excludes name="*.suo" />
                <excludes name="*.csproj.user" />
            </fileset>
        </copy>
        <zip zipfile="${dir.version}/${name.lib}-${assembly.version}.zip">
            <fileset basedir="${dir.files}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
    </target>
    
    <target name="clean">
        <property name="dir.build" value="${dir.build}" />
        <call target="Clean" />
        <delete file="${dir.build}/**.*" failonerror="false" />
    </target>
</project>
