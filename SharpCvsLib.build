<!--
    Build file for the 
-->
<project name="ICSharpCode.SharpCvsLib" default="debug">

    <property name="lib.name" value="ICSharpCode.SharpCvsLib" />    
    <property name="assembly.version" value="0.3.4.2" />  
    <property name="warnaserror" value="true" />
    
    <property name="console.name" value="scvs" />
    <property name="tests.name" value="ICSharpCode.SharpCvsLib.Tests" />
    
    <property name="nant.settings.currentframework" value = "net-1.0"/>
<!--    <property name="nant.settings.currentframework" value = "mono-1.0"/>-->

    <property name="build.dir" value="build/bin" /> 
    <property name="conf.dir" value="conf" />
    <property name="dist.dir" value="dist" />
    <property name="src.dir" value="src" />
    <property name="lib.dir" value="lib" />
    <property name="lib.ext.dir" value="${lib.dir}/ext" />

    <property name="log4net" value="log4net.dll" />
    <property name="nunit" value="nunit.framework.dll" />    
    <property name="ziplib" value="ICSharpCode.SharpZipLib.dll" />

    <target name="debug" depends="SharpCvsLib.Debug" />
    <target name="debug-with-update" depends="update.src, SharpCvsLib.Debug" />
    <target name="Release" depends="SharpCvsLib.Release" />
    
        <property name="debug" value="true" />
        <property name="unsafe" value="/unsafe-" />
        <property name="checked" value="/checked-" />
        <property name="define" value="DEBUG;TRACE" />

    <!-- Documentation variables -->
    <property name="copyright-text" value="Mike Krueger 2001-2002, Clayton Harbour 2003" />
    <property name="copyright-href" value="http://www.gnu.org/copyleft/lesser.html#TOC1" />
    
    <target name="update.src" description="Updates the source from cvs.">
       <cvs-update  module="sharcvslib" 
                    cvsroot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/nant"
                    destination="${src.dir}"
                    password="" />
    </target>

    <target name="setup">
        <mkdir dir="${build.dir}" />
        <copy todir="${build.dir}">
            <fileset basedir="${lib.dir}">
                <includes name="${ziplib}" />
            </fileset>
        </copy>        
        <copy todir="${build.dir}">
            <fileset basedir="${lib.ext.dir}">
                <includes name="${log4net}" />
            </fileset>
        </copy>
        <copy todir="${build.dir}">
            <fileset basedir="${conf.dir}">
                <includes name="*.config" />
            </fileset>
        </copy>
    </target>

    <target name="setup.tests">
        <mkdir dir="${build.dir}" />
        <copy todir="${build.dir}">
            <fileset basedir="${lib.ext.dir}">
                    <includes name="${nunit}" />
                    <includes name="${log4net}" />
            </fileset>
        </copy>        
    </target>
        
    <target name="dist.src">
        <property name="dist.src" value="${dist.dir}/${assembly.version}/src" />
        
        <mkdir dir="${dist.src}" />    
        <copy todir="${dist.src}/${lib.name}">
            <fileset basedir=".">
                <includes name="**/**.*" />
                <excludes name="*.suo" />
                <excludes name="*.csproj.user" />
                <excludes name="**/obj**" />
                <excludes name="**/dist**" />
                <excludes name="**/build**" />
            </fileset>
        </copy>
        <zip zipfile="${dist.dir}/${assembly.version}/${lib.name}-${assembly.version}-src.zip">
            <fileset basedir="${dist.src}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
    </target>
    
    <target name="gen-doc" failonerror="true">
        <property name="Title" value="#Cvslib" />
        <property name="ShowMissingSummaries" value="True" />
        <property name="OutputDirectory" value="${dist.dir}/${assembly.version}/doc/api" />
        
        <property name="ShowMissingSummaries" value="True" />
        <property name="ShowMissingRemarks" value="False" />
        <property name="ShowMissingParams" value="True" />
        <property name="ShowMissingReturns" value="True" />
        <property name="ShowMissingValues" value="True" />

        <property name="DocumentInternals" value="False" />
        <property name="DocumentProtected" value="True" />
        <property name="DocumentPrivates" value="False" />
        <property name="DocumentEmptyNamespaces" value="False" />

        <property name="IncludeAssemblyVersion" value="False" />

        <echo message="${build.dir}" />
        <ndoc>
            <assemblies basedir="${build.dir}">
                <includes name="${lib.name}.dll"/>
            </assemblies>
            <documenters>
                <documenter name="MSDN">
                    <property name="Title" value="${Title}" />
                    <property name="OutputDirectory" value="${OutputDirectory}/MSDN" />

                    <property name="ShowMissingSummaries" value="${ShowMissingSummaries}" />
                    <property name="ShowMissingRemarks" value="${ShowMissingRemarks}" />
                    <property name="ShowMissingParams" value="${ShowMissingParams}" />
                    <property name="ShowMissingReturns" value="${ShowMissingReturns}" />
                    <property name="ShowMissingValues" value="${ShowMissingValues}" />

                    <property name="DocumentInternals" value="${DocumentInternals}" />
                    <property name="DocumentProtected" value="${DocumentProtected}" />
                    <property name="DocumentPrivates" value="${DocumentPrivates}" />
                    <property name="DocumentEmptyNamespaces" value="${DocumentEmptyNamespaces}" />

                    <property name="IncludeAssemblyVersion" value="${IncludeAssemblyVersion}" />
                    <property name="CopyrightText" value="${copyright-text}" />
                    <property name="CopyrightHref" value="${copyright-href}" />

                    <property name="HtmlHelpName" value="Sporadicism.Blogger" />
                    <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="True" />
                </documenter>
<!--                <documenter name="JavaDoc">
                    <property name="Title" value="${Title}" />
                    <property name="OutputDirectory" value="${OutputDirectory}/JavaDoc" />

                    <property name="ShowMissingSummaries" value="${ShowMissingSummaries}" />
                    <property name="ShowMissingRemarks" value="${ShowMissingRemarks}" />
                    <property name="ShowMissingParams" value="${ShowMissingParams}" />
                    <property name="ShowMissingReturns" value="${ShowMissingReturns}" />
                    <property name="ShowMissingValues" value="${ShowMissingValues}" />

                    <property name="DocumentInternals" value="${DocumentInternals}" />
                    <property name="DocumentProtected" value="${DocumentProtected}" />
                    <property name="DocumentPrivates" value="${DocumentPrivates}" />
                    <property name="DocumentEmptyNamespaces" value="${DocumentEmptyNamespaces}" />

                    <property name="IncludeAssemblyVersion" value="${IncludeAssemblyVersion}" />
                    <property name="CopyrightText" value="${copyright-text}" />
                    <property name="CopyrightHref" value="${copyright-href}" />

                    <property name="SkipNamespacesWithoutSummaries" value="False" />
                    <property name="AutoPropertyBackerSummaries" value="False" />
                    <property name="AutoDocumentConstructors" value="True" />
                    <property name="DocumentAttributes" value="False" />
                    <property name="DocumentedAttributes" value="" />
                </documenter>
-->
            </documenters> 
        </ndoc>
    </target>
    
    <target name="dist.bin">
        <property name="dist.bin" value="${dist.dir}/${assembly.version}/bin" />
        
        <mkdir dir="${dist.bin}" />
        <echo message="${build.dir}" />
        <copy todir="${dist.bin}/${lib.name}">
            <fileset basedir="${build.dir}">
                <includes name="**/**.dll"/>
                <includes name="**/**.config"/>
            </fileset>
        </copy>
        
        <zip zipfile="${dist.dir}/${assembly.version}/${lib.name}-${assembly.version}-bin.zip">
            <fileset basedir="${dist.bin}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
    </target>
    
    <target name="dist" depends="SharpCvsLib.Release">
        <call target="dist.src" />
        <call target="dist.bin" />
        
        <call target="gen-doc" />
    </target>

    
    <target name="sf-release">
        <property name="export.dir" value="h:/dev/sf.net/sharpcvslib" />
        <property name="version.dir" value="${export.dir}/${assembly.version}" />
        <property name="files.dir" value="${version.dir}/files" />
        
        <mkdir dir="${version.dir}" />
        <mkdir dir="${files.dir}" />
        
        <copy todir="${files.dir}">
            <fileset basedir=".">
                <includes name="**/**.*" />
                <excludes name="*.suo" />
                <excludes name="*.csproj.user" />
            </fileset>
        </copy>
        <zip zipfile="${version.dir}/${lib.name}-${assembly.version}.zip">
            <fileset basedir="${files.dir}">
                <includes name="**/**.*" />
            </fileset>
        </zip>
    </target>
    
    <target name="SharpCvsLib.Debug">
        <property name="project.name" value="SharpCvsLib" />
        <property name="build.dir" value="${build.dir}/Debug" />
        <property name="output" value="${build.dir}/${lib.name}.dll" />
        <property name="debug" value="true" />
        <property name="unsafe" value="/unsafe-" />
        <property name="checked" value="/checked-" />
        <property name="define" value="DEBUG;TRACE" />
        <property name="doc" value="${build.dir}/{lib.name}.xml" />

        <property name="output.tests" value="${build.dir}/${lib.name}.Tests.dll" />

        <call target="SharpCvsLib" />
        <call target="SharpCvsLib.Console" />
        <call target="SharpCvsLib.Tests" />
    </target>
    
    <target name="SharpCvsLib.Release">
        <property name="project.name" value="SharpCvsLib" />
        <property name="build.dir" value="${build.dir}/Release" />
        <property name="output" value="${build.dir}/${lib.name}.dll" />
        <property name="debug" value="false" />
        <property name="unsafe" value="/unsafe-" />
        <property name="checked" value="/checked-" />
        <property name="define" value="TRACE" />
        <property name="doc" value="${build.dir}/${lib.name}.xml" />
                
        <call target="SharpCvsLib" />
    </target>
    
    <target name="SharpCvsLib" depends="setup">
        <csc    target="library" 
                warnaserror="${warnaserror}" 
                output="${build.dir}/${lib.name}.dll" 
                debug="${debug}" 
                define="${define}" 
                doc="${build.dir}/${lib.name}.xml">
                
            <arg value="${unsafe}" />
            <arg value="${checked}" />
            
            <sources basedir="${src.dir}">
                <includes name="ICSharpCode/**/*.cs" />
            </sources>
            
            <references>
                <includes name="System.dll" />            
                <includes name="${lib.dir}/${ziplib}" />
                <includes name="${lib.ext.dir}/${log4net}" />
            </references>
            
        </csc>
    </target>

    <target name="SharpCvsLib.Tests" depends="SharpCvsLib, setup.tests">
        <echo message="Target: ${build.dir}/${tests.name}.dll" />
        
        <csc    target="library" 
                warnaserror="${warnaserror}"
                output="${build.dir}/${tests.name}.dll" 
                debug="${debug}" 
                define="${define}" 
                doc="${build.dir}/${tests.name}.xml">
            <arg value="${unsafe}" />
            <arg value="${checked}" />
            <sources basedir="${src.dir}">
<!-- // TODO: Change to internalize helpers (accessor) -->
                <includes name="ICSharpCode/**/*.cs" />
                <includes name="ICSharpCode.Tests/**/*.cs" />
            </sources>
            <references>
                <includes name="System.dll" />            
                <includes name="${lib.dir}/${ziplib}" />
                <includes name="${lib.ext.dir}/${log4net}" />
                <includes name="${lib.ext.dir}/${nunit}" />
<!-- // TODO: Change to internalize helpers (accessor) -->
<!--                <includes name="${build.dir}/${lib.name}.dll" />-->
            </references>
        </csc>
    </target>

    <target name="run-tests" depends="SharpCvsLib.Tests">
        <nunit2>
            <test assemblyname="${build.dir}/${tests.name}.dll"/>
        </nunit2>
    </target>
    
    <target name="SharpCvsLib.Console" depends="SharpCvsLib, setup.tests">
        <csc    target="exe" 
                warnaserror="${warnaserror}"
                output="${build.dir}/${console.name}.exe" 
                debug="${debug}" 
                define="${define}" 
                doc="${build.dir}/${console.name}.xml">
            <arg value="${unsafe}" />
            <arg value="${checked}" />
            <sources basedir="${src.dir}">
                <includes name="ICSharpCode.Console/**/*.cs" />
            </sources>
            <references>
                <includes name="System.dll" />            
                <includes name="${lib.dir}/${ziplib}" />
                <includes name="${lib.ext.dir}/${log4net}" />
                <includes name="${lib.ext.dir}/${nunit}" />
                <includes name="${output}" />
            </references>
        </csc>
        
    </target>

    
    <target name="DebugClean">
        <property name="build.dir" value="${build.dir}/Debug" />
        <call target="Clean" />
        <delete file="${build.dir}/${lib.name}.Tests.dll" failonerror="false" />
        <delete file="${build.dir}/${lib.name}.Tests.dll" failonerror="false" />
    </target>
    
    <target name="ReleaseClean">
        <property name="build.dir" value="${build.dir}/Release" />
        <call target="Clean" />
    </target>
    
    <target name="Clean">
        <delete file="${build.dir}/${lib.name}.dll" failonerror="false" />
        <delete file="${build.dir}/${lib.name}.pdb" failonerror="false" />
    </target>
</project>