<!--
    Build file for the SharpCvsLib project:
        http://sharpcvslib.sourceforge.net
-->
<project name="${name.top-level}-${name.project}" default="build.all">
    <property name="util.copy" value="pscp" />

    <!-- Names of the files generated -->
    <property name="name.top-level" value="ICSharpCode" />
    <property name="name.project" value="SharpCvsLib" />
    <property name="name.lib" value="${name.project}" />    
    <property name="name.console" value="Console" />
    <property name="name.console.exe" value="cvs" />
    <property name="name.tests" value="Tests" />
    
    <!-- Version information -->
    <property name="assembly.version" value="0.3.4.2" />  
    
    <!-- Compiler information/ settings -->
    <property name="compile.warnaserror" value="true" />
    <property name="compile.debug" value="true" />
    <property name="compile.unsafe" value="/unsafe-" />
    <property name="compile.checked" value="/checked-" />
    <property name="compile.define" value="DEBUG;TRACE" />
    
    <!-- Directory structure -->
    <property name="dir.base" value="${nant.project.basedir}" />
    <property name="dir.build" value="${dir.base}/build/bin" /> 
    <property name="dir.conf" value="${dir.base}/conf" />
    <property name="dir.dist" value="${dir.base}/dist" />
    <property name="dir.doc" value="${dir.base}/doc" />
    <property name="dir.src" value="${dir.base}/src" />
    <property name="dir.lib" value="${dir.base}/lib" />
    <property name="dir.lib.ext" value="${dir.lib}/ext" />
    <property name="dir.release" value="${dir.base}/release" />
    <property name="dir.output" value="${dir.release}/${assembly.version}" />
    
    <property name="dir.doc.msdn" value="${dir.dist}/doc/api/msdn" />
    
    <!-- Referenced lib and lib/ext dll files -->
    <property name="lib.log4net" value="log4net.dll" />
    <property name="lib.nunit" value="nunit.framework.dll" />    
    <property name="lib.zip" value="ICSharpCode.SharpZipLib.dll" />

    <!-- Documentation variables -->
    <property name="doc.title" value="${name.project}" />
    <property name="doc.copyright.text" value="Mike Krueger 2001-2002, SharpCvsLib Developers 2003" />
    <property name="doc.copyright.href" value="http://www.gnu.org/copyleft/lesser.html#TOC1" />

    <!-- Targets -->
    <target name="update.src" description="Updates the source from cvs.">
       <cvs-update  module="sharcvslib" 
                    cvsroot=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/nant"
                    destination="${src.dir}"
                    password="" />
    </target>

    <target name="setup">
        <mkdir dir="${dir.build}" />
        <copy todir="${dir.build}">
            <fileset basedir="${dir.lib}">
                <includes name="${lib.zip}" />
            </fileset>
        </copy>        
        <copy todir="${dir.build}">
            <fileset basedir="${dir.lib.ext}">
                <includes name="${lib.log4net}" />
                <includes name="${lib.nunit}" />
            </fileset>
        </copy>
        <copy todir="${dir.build}">
            <fileset basedir="${dir.conf}">
                <includes name="*.config" />
            </fileset>
        </copy>
        <copy todir="${dir.build}">
            <fileset basedir="${dir.doc}">
                <includes name="NamespaceSummary.xml" />
            </fileset>
        </copy>
    </target>
   
    <target name="build.all">
        <call target="build.console" />
        <call target="build.lib" />
        <call target="build.test" />
    </target>

    <target name="build.lib" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}/${name.project}/${name.project}.build" target="build"/>
    </target>

    <target name="build.console" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}.${name.console}/${name.project}/${name.console}.build" target="build"/>
    </target>
    
    <target name="build.test" depends="setup">
            <nant buildfile="${dir.src}/${name.top-level}.${name.tests}/${name.project}/${name.tests}.build" target="build"/>
    </target>

    <target name="run-tests" depends="build.all">
            <nant buildfile="${dir.src}/${name.top-level}.${name.tests}/${name.project}/${name.tests}.build" target="run-tests"/>
    </target>

    <target name="netdoc" failonerror="false">
        <property name="doc.exe" value="hhc.exe" />
        
        <property name="doc.show-missing-summaries" value="True" />
        <property name="doc.show-missing-remarks" value="False" />
        <property name="doc.show-missing-params" value="True" />
        <property name="doc.show-missing-returns" value="True" />
        <property name="doc.show-missing-values" value="True" />

        <property name="doc.internals" value="False" />
        <property name="doc.protected" value="True" />
        <property name="doc.privates" value="False" />
        <property name="doc.empty-namespaces" value="False" />

        <property name="doc.include-assembly-version" value="True" />
        
        <ndoc verbose="true">
            <assemblies basedir="${dir.build}">
                <includes name="${name.top-level}.${name.lib}.dll" />
                <includes name="${name.console.exe}.exe" />
                <excludes name="${name.top-level}.${name.lib}.${name.tests}.dll"/>
            </assemblies>
            <summaries basedir="${dir.build}">
                <includes name="NamespaceSummary.xml"/>
            </summaries>
            <documenters>
                <documenter name="MSDN">
                    <property name="Title" value="${doc.title}" />
                    <property name="OutputDirectory" value="${dir.doc.msdn}" />

                    <property name="ShowMissingSummaries" value="${doc.show-missing-summaries}" />
                    <property name="ShowMissingRemarks" value="${doc.show-missing-remarks}" />
                    <property name="ShowMissingParams" value="${doc.show-missing-params}" />
                    <property name="ShowMissingReturns" value="${doc.show-missing-returns}" />
                    <property name="ShowMissingValues" value="${doc.show-missing-values}" />

                    <property name="DocumentInternals" value="${doc.internals}" />
                    <property name="DocumentProtected" value="${doc.protected}" />
                    <property name="DocumentPrivates" value="${doc.privates}" />
                    <property name="DocumentEmptyNamespaces" value="${doc.empty-namespaces}" />

                    <property name="IncludeAssemblyVersion" value="${doc.include-assembly-version}" />
                    <property name="CopyrightText" value="${doc.copyright.text}" />
                    <property name="CopyrightHref" value="${doc.copyright.href}" />

                    <property name="HtmlHelpName" value="${doc.title}" />
                    <property name="HtmlHelpCompilerFilename" value="${doc.exe}" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="True" />
                </documenter>
            </documenters> 
        </ndoc>
        <style style="${dir.doc}/NamespaceSummary.xslt" in="${dir.doc}/NamespaceSummary.xml" out="${dir.doc.msdn}/index.html" />
    </target>
    
    <target name="dist" depends="build.lib, build.test, build.console">
        <mkdir dir="${dir.dist}/bin" />
        <mkdir dir="${dir.dist}/src" />    
        
        <call target="netdoc" />
        
        <copy todir="${dir.dist}/bin/${name.lib}">
            <fileset basedir="${dir.build}">
                <includes name="**/**.dll"/>
                <includes name="**/**.config"/>
            </fileset>
        </copy>
        
        <copy todir="${dir.dist}/src/${name.lib}">
            <fileset basedir=".">
                <includes name="**/**.*" />
                <excludes name="*.suo" />
                <excludes name="*.csproj.user" />
                <excludes name="**/obj**" />
                <excludes name="**/dist**" />
                <excludes name="**/build**" />
            </fileset>
        </copy>
        
    </target>
    
    <target name="build-release.common">
        <call target="dist" />
        
        <echo message="Building release:" />
        <echo message="-----------------" />
        <echo message="Release version: ${assembly.version}" />
        <echo message="Source directory: ${dir.dist}/src" />
        <echo message="Binary directory: ${dir.dist}/bin" />
        <echo message="Output directory: ${dir.output}" />
        
        <mkdir dir="${dir.output}" />
        
        <zip zipfile="${dir.output}/${name.lib}-${assembly.version}-bin.zip">
            <fileset basedir="${dir.dist}">
                <includes name="bin/**/**.*" />
                <includes name="doc/**/**.chm" />
            </fileset>
        </zip>
        
        <zip zipfile="${dir.output}/${name.lib}-${assembly.version}-src.zip">
            <fileset basedir="${dir.dist}">
                <includes name="src/**/**.*" />
                <includes name="doc/**/**.chm" />
            </fileset>
        </zip>

    </target>
    
    <target name="build-release.sf">
        <property name="assembly.version" value="${assembly.version}" />
        <property name="dir.output" value="${dir.release}/${assembly.version}" />
        <call target="build-release.common" />        
    </target>
    
    <target name="build-release.nightly">
        <tstamp property="assembly.version" pattern="yyyyMMdd-HHmm" verbose="true"/>
        <property name="dir.output" value="${dir.release}/${assembly.version}" />

        <call target="build-release.common" />
        
        <property name="sf.username" value="drakmar@shell.sourceforge.net" />
        <property name="sf.location" value="/home/groups/s/sh/sharpcvslib/htdocs/nightly-build" />

        <property name="args.copy-program" value="${dir.output}/* ${sf.username}:${sf.location}/" />
        <exec program="${util.copy}" commandline="${args.copy-program}"/>
        
        <property name="args.copy-docs" value="${dir.doc.msdn}/*.html ${sf.username}:${sf.location}/doc/api" />
        <exec program="${util.copy}" commandline="${args.copy-docs}"/>
    </target>
    
    <target name="clean">
        <echo message="Build directory: ${dir.build}" />
        <delete dir="${dir.build}" failonerror="false"/>
    </target>
</project>
